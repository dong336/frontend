/*
 *	jquery gaessamzie flick - v15 - 2022-02-04
 *	Lee Kyung Hwan(gaessamzie@naver.com)
 *	http://gaessamzie.com/gaessamzie/gaessamzieflick/
 */

let onlyapptouchhandler = function (event) {
	event.preventDefault();
};
let gaessamzieFlickIdx = 0;
(function ($) {
	$.fn.extend({
		gaessamzieFlick: function (options) {
			var defaults = {
				start: 1,
				buttons: false,
				indicator: false,
				bar: false,
				number: false,
				loop: false,
				after: false,
				complete: false,
				play: false,
				time: 4,
				delay: 4,
				speed: 4,
			};
			var options = $.extend(defaults, options);
			return this.each(function () {
				let flick = $(this);
				let width = flick.width();
				let stage = flick.find('>.gaessamzieFlickStage');
				let item = stage.find('>.gaessamzieFlickItem');
				let total = item.length;
				let start = options.start;
				let buttons = options.buttons;
				let indicator = options.indicator;
				let bar = options.bar;
				let number = options.number;
				let loop = options.loop;
				let after = options.after;
				let complete = options.complete;
				let play = options.play;
				let time = options.time;
				let delay = options.delay;
				let speed = options.speed;
				let direction = 'next';

				if (flick.hasClass('gaessamzieFlick')) {
					return false;
				}
				flick
					.addClass('gaessamzieFlick')
					.attr('direction', direction)
					.attr('gidx', gaessamzieFlickIdx);
				gaessamzieFlickIdx++;

				if (loop == true) {
					if (total < 2) {
						loop = false;
					} else {
						stage.append(
							'<li class="gaessamzieFlickItem cloneFirst">' +
								item.eq(0).html() +
								'</li>',
						);
						stage.append(
							'<li class="gaessamzieFlickItem cloneFirst second">' +
								item.eq(1).html() +
								'</li>',
						);
						stage.append(
							'<li class="gaessamzieFlickItem cloneLast">' +
								item.eq(total - 1).html() +
								'</li>',
						);
						stage.append(
							'<li class="gaessamzieFlickItem cloneLast second">' +
								item.eq(total - 2).html() +
								'</li>',
						);
					}
				}

				flick.css({
					minWidth: '1px',
					overflow: 'hidden',
				});
				stage.css({
					position: 'relative',
					margin: '0px',
					padding: '0px',
				});
				item.each(function () {
					$(this).css({
						position: 'absolute',
						top: '0px',
						left: $(this).index() * 100 + '%',
						width: width,
						margin: '0px',
						padding: '0px',
						'list-style': 'none',
					});
				});

				stage.find('>.gaessamzieFlickItem.cloneFirst').css({
					position: 'absolute',
					top: '0px',
					left: total * 100 + '%',
					float: 'left',
					width: width,
					margin: '0px',
					padding: '0px',
					'list-style': 'none',
				});
				stage.find('>.gaessamzieFlickItem.cloneFirst.second').css({
					left: (total + 1) * 100 + '%',
				});
				stage.find('>.gaessamzieFlickItem.cloneLast').css({
					position: 'absolute',
					top: '0px',
					left: '-100%',
					width: width,
					margin: '0px',
					padding: '0px',
					'list-style': 'none',
				});
				stage.find('>.gaessamzieFlickItem.cloneLast.second').css({
					left: '-200%',
				});
				item
					.eq(start - 1)
					.addClass('active')
					.css({ position: 'relative' });
				let active = stage.find('>.gaessamzieFlickItem.active');
				if (navigator.appVersion.indexOf('MSIE 7.0') >= 0) {
					stage.css({ left: -(active.index() * width) });
				} else if (navigator.appVersion.indexOf('MSIE 8.0') >= 0) {
					stage.css({ left: -(active.index() * width) });
				} else if (navigator.appVersion.indexOf('MSIE 9.0') >= 0) {
					stage.css({ left: -(active.index() * width) });
				} else {
					stage.css({
						'-moz-transition': '-moz-transform 0s',
						'-webkit-transition': '-webkit-transform 0s',
						transition: 'transform 0s',
						'-moz-transform':
							'translate3d(' + -(active.index() * width) + 'px,0,0)',
						'-webkit-transform':
							'translate3d(' + -(active.index() * width) + 'px,0,0)',
						transform: 'translate3d(' + -(active.index() * width) + 'px,0,0)',
					});
				}

				let position;
				let playidx;
				let delayidx;
				if (buttons == true) {
					if (total <= 1) {
					} else {
						flick.append('<a href="#" class="gaessamzieFlickPrev">Prev</a>');
						flick.append('<a href="#" class="gaessamzieFlickNext">Next</a>');
					}
					buttonSet();
					flick.find('>.gaessamzieFlickPrev').on('click', function () {
						if (stage.is(':animated')) {
						} else {
							if ($(this).hasClass('buttonActive')) {
								if (play == true) {
									playclear();
									delayclear();
									delayidx = setTimeout(function () {
										playnext();
										playidx = setInterval(playnext, time * 1000);
									}, delay * 1000);
								}
								if (stage.find('>.gaessamzieFlickItem.active').index() == 0) {
									stage
										.find('>.gaessamzieFlickItem.active')
										.removeClass('active');
									stage
										.find('>.gaessamzieFlickItem')
										.eq(total - 1)
										.addClass('active');
								} else {
									stage
										.find('>.gaessamzieFlickItem.active')
										.removeClass('active')
										.prev()
										.addClass('active');
								}
								position = stage.find('>.gaessamzieFlickItem.active');
								if (navigator.appVersion.indexOf('MSIE 7.0') >= 0) {
									stage.animate(
										{ left: -(position.index() * width) },
										speed * 100,
									);
								} else if (navigator.appVersion.indexOf('MSIE 8.0') >= 0) {
									stage.animate(
										{ left: -(position.index() * width) },
										speed * 100,
									);
								} else if (navigator.appVersion.indexOf('MSIE 9.0') >= 0) {
									stage.animate(
										{ left: -(position.index() * width) },
										speed * 100,
									);
								} else {
									if (loop == true) {
										if (
											stage.find('>.gaessamzieFlickItem.active').index() ==
											total - 1
										) {
											stage
												.css({
													'-moz-transition':
														'-moz-transform ' + speed / 10 + 's',
													'-webkit-transition':
														'-webkit-transform ' + speed / 10 + 's',
													transition: 'transform ' + speed / 10 + 's',
													'-moz-transform': 'translate3d(' + width + 'px,0,0)',
													'-webkit-transform':
														'translate3d(' + width + 'px,0,0)',
													transform: 'translate3d(' + width + 'px,0,0)',
												})
												.one('transitionend', function () {
													stage.css({
														'-moz-transition': '-moz-transform 0s',
														'-webkit-transition': '-webkit-transform 0s',
														transition: 'transform 0s',
														'-moz-transform':
															'translate3d(' +
															-(
																stage
																	.find('>.gaessamzieFlickItem.active')
																	.index() * width
															) +
															'px,0,0)',
														'-webkit-transform':
															'translate3d(' +
															-(
																stage
																	.find('>.gaessamzieFlickItem.active')
																	.index() * width
															) +
															'px,0,0)',
														transform:
															'translate3d(' +
															-(
																stage
																	.find('>.gaessamzieFlickItem.active')
																	.index() * width
															) +
															'px,0,0)',
													});
													stage
														.find('>.gaessamzieFlickItem')
														.css({ position: 'absolute' });
													stage
														.find('>.gaessamzieFlickItem.active')
														.css({ position: 'relative' });
													if (complete != false) {
														complete(flick);
													}
												});
										} else {
											stage
												.css({
													'-moz-transition':
														'-moz-transform ' + speed / 10 + 's',
													'-webkit-transition':
														'-webkit-transform ' + speed / 10 + 's',
													transition: 'transform ' + speed / 10 + 's',
													'-moz-transform':
														'translate3d(' +
														-(position.index() * width) +
														'px,0,0)',
													'-webkit-transform':
														'translate3d(' +
														-(position.index() * width) +
														'px,0,0)',
													transform:
														'translate3d(' +
														-(position.index() * width) +
														'px,0,0)',
												})
												.one('transitionend', function () {
													stage.css({
														'-moz-transition': '-moz-transform 0s',
														'-webkit-transition': '-webkit-transform 0s',
														transition: 'transform 0s',
														'-moz-transform':
															'translate3d(' +
															-(
																stage
																	.find('>.gaessamzieFlickItem.active')
																	.index() * width
															) +
															'px,0,0)',
														'-webkit-transform':
															'translate3d(' +
															-(
																stage
																	.find('>.gaessamzieFlickItem.active')
																	.index() * width
															) +
															'px,0,0)',
														transform:
															'translate3d(' +
															-(
																stage
																	.find('>.gaessamzieFlickItem.active')
																	.index() * width
															) +
															'px,0,0)',
													});
													stage
														.find('>.gaessamzieFlickItem')
														.css({ position: 'absolute' });
													stage
														.find('>.gaessamzieFlickItem.active')
														.css({ position: 'relative' });
													if (complete != false) {
														complete(flick);
													}
												});
										}
									} else {
										stage
											.css({
												'-moz-transition': '-moz-transform ' + speed / 10 + 's',
												'-webkit-transition':
													'-webkit-transform ' + speed / 10 + 's',
												transition: 'transform ' + speed / 10 + 's',
												'-moz-transform':
													'translate3d(' +
													-(position.index() * width) +
													'px,0,0)',
												'-webkit-transform':
													'translate3d(' +
													-(position.index() * width) +
													'px,0,0)',
												transform:
													'translate3d(' +
													-(position.index() * width) +
													'px,0,0)',
											})
											.one('transitionend', function () {
												stage
													.find('>.gaessamzieFlickItem')
													.css({ position: 'absolute' });
												stage
													.find('>.gaessamzieFlickItem.active')
													.css({ position: 'relative' });
												if (complete != false) {
													complete(flick);
												}
											});
									}
								}
								directionSet(-(position.index() * width));
								buttonSet();
								indicatorSet();
								numberSet();
								if (after != false) {
									after(flick);
								}
							}
						}
						return false;
					});
					flick.find('>.gaessamzieFlickNext').on('click', function () {
						if (stage.is(':animated')) {
						} else {
							if ($(this).hasClass('buttonActive')) {
								if (play == true) {
									playclear();
									delayclear();
									delayidx = setTimeout(function () {
										playnext();
										playidx = setInterval(playnext, time * 1000);
									}, delay * 1000);
								}
								if (
									stage.find('>.gaessamzieFlickItem.active').index() ==
									total - 1
								) {
									stage
										.find('>.gaessamzieFlickItem.active')
										.removeClass('active');
									stage.find('>.gaessamzieFlickItem').eq(0).addClass('active');
									if (loop == true) {
										position = stage.find('>.gaessamzieFlickItem.cloneFirst');
									} else {
										position = stage.find('>.gaessamzieFlickItem.active');
									}
								} else {
									stage
										.find('>.gaessamzieFlickItem.active')
										.removeClass('active')
										.next()
										.addClass('active');
									position = stage.find('>.gaessamzieFlickItem.active');
								}
								if (navigator.appVersion.indexOf('MSIE 7.0') >= 0) {
									stage.animate(
										{ left: -(position.index() * width) },
										speed * 100,
									);
								} else if (navigator.appVersion.indexOf('MSIE 8.0') >= 0) {
									stage.animate(
										{ left: -(position.index() * width) },
										speed * 100,
									);
								} else if (navigator.appVersion.indexOf('MSIE 9.0') >= 0) {
									stage.animate(
										{ left: -(position.index() * width) },
										speed * 100,
									);
								} else {
									if (loop == true) {
										stage
											.css({
												'-moz-transition': '-moz-transform ' + speed / 10 + 's',
												'-webkit-transition':
													'-webkit-transform ' + speed / 10 + 's',
												transition: 'transform ' + speed / 10 + 's',
												'-moz-transform':
													'translate3d(' +
													-(position.index() * width) +
													'px,0,0)',
												'-webkit-transform':
													'translate3d(' +
													-(position.index() * width) +
													'px,0,0)',
												transform:
													'translate3d(' +
													-(position.index() * width) +
													'px,0,0)',
											})
											.one('transitionend', function () {
												stage.css({
													'-moz-transition': '-moz-transform 0s',
													'-webkit-transition': '-webkit-transform 0s',
													transition: 'transform 0s',
													'-moz-transform':
														'translate3d(' +
														-(
															stage
																.find('>.gaessamzieFlickItem.active')
																.index() * width
														) +
														'px,0,0)',
													'-webkit-transform':
														'translate3d(' +
														-(
															stage
																.find('>.gaessamzieFlickItem.active')
																.index() * width
														) +
														'px,0,0)',
													transform:
														'translate3d(' +
														-(
															stage
																.find('>.gaessamzieFlickItem.active')
																.index() * width
														) +
														'px,0,0)',
												});
												stage
													.find('>.gaessamzieFlickItem')
													.css({ position: 'absolute' });
												stage
													.find('>.gaessamzieFlickItem.active')
													.css({ position: 'relative' });
												if (complete != false) {
													complete(flick);
												}
											});
									} else {
										stage
											.css({
												'-moz-transition': '-moz-transform ' + speed / 10 + 's',
												'-webkit-transition':
													'-webkit-transform ' + speed / 10 + 's',
												transition: 'transform ' + speed / 10 + 's',
												'-moz-transform':
													'translate3d(' +
													-(position.index() * width) +
													'px,0,0)',
												'-webkit-transform':
													'translate3d(' +
													-(position.index() * width) +
													'px,0,0)',
												transform:
													'translate3d(' +
													-(position.index() * width) +
													'px,0,0)',
											})
											.one('transitionend', function () {
												stage
													.find('>.gaessamzieFlickItem')
													.css({ position: 'absolute' });
												stage
													.find('>.gaessamzieFlickItem.active')
													.css({ position: 'relative' });
												if (complete != false) {
													complete(flick);
												}
											});
									}
								}
								directionSet(-(position.index() * width));
								buttonSet();
								indicatorSet();
								numberSet();
								if (after != false) {
									after(flick);
								}
							}
						}
						return false;
					});
				}

				if (indicator == true && total > 1) {
					if (flick.find('>.gaessamzieFlickIndicator').length == 0) {
						flick.append('<ul class="gaessamzieFlickIndicator"></ul>');
						for (let i = 0; i < total; i++) {
							flick
								.find('>.gaessamzieFlickIndicator')
								.append(
									'<li style="list-style:none;"><a href="#">' +
										(i + 1) +
										'</a></li>',
								);
						}
					}
					indicatorSet();
					flick
						.find('>.gaessamzieFlickIndicator li a')
						.on('click', function () {
							if (stage.is(':animated')) {
							} else {
								if (play == true) {
									playclear();
									delayclear();
									delayidx = setTimeout(function () {
										playnext();
										playidx = setInterval(playnext, time * 1000);
									}, delay * 1000);
								}
								stage.find('>.gaessamzieFlickItem').removeClass('active');
								stage
									.find('>.gaessamzieFlickItem')
									.eq($(this).parent().index())
									.addClass('active');
								if (navigator.appVersion.indexOf('MSIE 7.0') >= 0) {
									stage.animate(
										{ left: -($(this).parent().index() * width) },
										speed * 100,
									);
								} else if (navigator.appVersion.indexOf('MSIE 8.0') >= 0) {
									stage.animate(
										{ left: -($(this).parent().index() * width) },
										speed * 100,
									);
								} else if (navigator.appVersion.indexOf('MSIE 9.0') >= 0) {
									stage.animate(
										{ left: -($(this).parent().index() * width) },
										speed * 100,
									);
								} else {
									stage.css({
										'-moz-transition': '-moz-transform 0s',
										'-webkit-transition': '-webkit-transform 0s',
										transition: 'transform 0s',
										'-moz-transform':
											'translate3d(' +
											-($(this).parent().index() * width) +
											'px,0,0)',
										'-webkit-transform':
											'translate3d(' +
											-($(this).parent().index() * width) +
											'px,0,0)',
										transform:
											'translate3d(' +
											-($(this).parent().index() * width) +
											'px,0,0)',
									});
									stage
										.find('>.gaessamzieFlickItem')
										.css({ position: 'absolute' });
									stage
										.find('>.gaessamzieFlickItem.active')
										.css({ position: 'relative' });
								}
								directionSet(-($(this).parent().index() * width));
								buttonSet();
								indicatorSet();
								numberSet();
								if (after != false) {
									after(flick);
								}
								if (complete != false) {
									complete(flick);
								}
							}
							return false;
						});
				}
				if (number == true) {
					flick.append(
						'<div class="gaessamzieFlickNumber"><strong></strong> / <span>' +
							total +
							'</span></div>',
					);
					numberSet();
				}

				function buttonSet() {
					active = stage.find('>.gaessamzieFlickItem.active');
					if (loop == true) {
						flick.find('>.gaessamzieFlickPrev').addClass('buttonActive');
						flick.find('>.gaessamzieFlickNext').addClass('buttonActive');
					} else {
						if (active.index() == 0) {
							flick.find('>.gaessamzieFlickPrev').removeClass('buttonActive');
							flick.find('>.gaessamzieFlickNext').addClass('buttonActive');
						} else if (active.index() == total - 1) {
							flick.find('>.gaessamzieFlickPrev').addClass('buttonActive');
							flick.find('>.gaessamzieFlickNext').removeClass('buttonActive');
						} else {
							flick.find('>.gaessamzieFlickPrev').addClass('buttonActive');
							flick.find('>.gaessamzieFlickNext').addClass('buttonActive');
						}
					}
				}
				function indicatorSet() {
					active = stage.find('>.gaessamzieFlickItem.active');
					let indicator1 = stage.parent().find('.gaessamzieFlickIndicator');

					indicator1.find('li').removeClass('active');
					indicator1.find('li').eq(active.index()).addClass('active');

					if (bar == true) {
						let indiWidth = indicator1.width();
						let indiList = indicator1.find('li').length;
						indicator1.find('li').css({ width: indiWidth / indiList + 'px' });
					}
				}
				function numberSet() {
					active = stage.find('>.gaessamzieFlickItem.active');
					flick.find('>.gaessamzieFlickNumber strong').html(active.index() + 1);
				}
				function directionSet(np) {
					if (stage.position().left < np) {
						flick.attr('direction', 'prev');
					}
					if (stage.position().left > np) {
						flick.attr('direction', 'next');
					}
				}
				if (play == true) {
					playidx = 'play' + flick.attr('gidx');
					delayidx = 'delay' + flick.attr('gidx');
					playidx = setInterval(playnext, time * 1000);
				}
				function playnext() {
					if (stage.is(':animated')) {
					} else {
						if (total > 1) {
							if (
								stage.find('>.gaessamzieFlickItem.active').index() ==
								total - 1
							) {
								stage
									.find('>.gaessamzieFlickItem.active')
									.removeClass('active');
								stage.find('>.gaessamzieFlickItem').eq(0).addClass('active');
								if (loop == true) {
									position = stage.find('>.gaessamzieFlickItem.cloneFirst');
								} else {
									position = stage.find('>.gaessamzieFlickItem.active');
								}
							} else {
								stage
									.find('>.gaessamzieFlickItem.active')
									.removeClass('active')
									.next()
									.addClass('active');
								position = stage.find('>.gaessamzieFlickItem.active');
							}
							if (navigator.appVersion.indexOf('MSIE 7.0') >= 0) {
								stage.animate(
									{ left: -(position.index() * width) },
									speed * 100,
								);
							} else if (navigator.appVersion.indexOf('MSIE 8.0') >= 0) {
								stage.animate(
									{ left: -(position.index() * width) },
									speed * 100,
								);
							} else if (navigator.appVersion.indexOf('MSIE 9.0') >= 0) {
								stage.animate(
									{ left: -(position.index() * width) },
									speed * 100,
								);
							} else {
								if (loop == true) {
									stage
										.css({
											'-moz-transition': '-moz-transform ' + speed / 10 + 's',
											'-webkit-transition':
												'-webkit-transform ' + speed / 10 + 's',
											transition: 'transform ' + speed / 10 + 's',
											'-moz-transform':
												'translate3d(' +
												-(position.index() * width) +
												'px,0,0)',
											'-webkit-transform':
												'translate3d(' +
												-(position.index() * width) +
												'px,0,0)',
											transform:
												'translate3d(' +
												-(position.index() * width) +
												'px,0,0)',
										})
										.one('transitionend', function () {
											stage.css({
												'-moz-transition': '-moz-transform 0s',
												'-webkit-transition': '-webkit-transform 0s',
												transition: 'transform 0s',
												'-moz-transform':
													'translate3d(' +
													-(
														stage.find('>.gaessamzieFlickItem.active').index() *
														width
													) +
													'px,0,0)',
												'-webkit-transform':
													'translate3d(' +
													-(
														stage.find('>.gaessamzieFlickItem.active').index() *
														width
													) +
													'px,0,0)',
												transform:
													'translate3d(' +
													-(
														stage.find('>.gaessamzieFlickItem.active').index() *
														width
													) +
													'px,0,0)',
											});
											stage
												.find('>.gaessamzieFlickItem')
												.css({ position: 'absolute' });
											stage
												.find('>.gaessamzieFlickItem.active')
												.css({ position: 'relative' });
											if (complete != false) {
												complete(flick);
											}
										});
								} else {
									stage
										.css({
											'-moz-transition': '-moz-transform ' + speed / 10 + 's',
											'-webkit-transition':
												'-webkit-transform ' + speed / 10 + 's',
											transition: 'transform ' + speed / 10 + 's',
											'-moz-transform':
												'translate3d(' +
												-(position.index() * width) +
												'px,0,0)',
											'-webkit-transform':
												'translate3d(' +
												-(position.index() * width) +
												'px,0,0)',
											transform:
												'translate3d(' +
												-(position.index() * width) +
												'px,0,0)',
										})
										.one('transitionend', function () {
											stage
												.find('>.gaessamzieFlickItem')
												.css({ position: 'absolute' });
											stage
												.find('>.gaessamzieFlickItem.active')
												.css({ position: 'relative' });
											if (complete != false) {
												complete(flick);
											}
										});
								}
							}
							directionSet(-(position.index() * width));
							buttonSet();
							indicatorSet();
							numberSet();
							if (after != false) {
								after(flick);
							}
						}
					}
				}
				function playclear() {
					clearInterval(playidx);
				}
				function delayclear() {
					clearTimeout(delayidx);
				}

				$(window).on('resize orientationchange', function () {
					active = stage.find('>.gaessamzieFlickItem.active');
					width = flick.width();
					item.css({
						float: 'left',
						width: width,
					});
					stage.find('>.gaessamzieFlickItem.cloneFirst').css({
						width: width,
					});
					stage.find('>.gaessamzieFlickItem.cloneLast').css({
						width: width,
					});
					active = stage.find('>.active');
					if (navigator.appVersion.indexOf('MSIE 7.0') >= 0) {
						stage.css({ left: -(active.index() * width) });
					} else if (navigator.appVersion.indexOf('MSIE 8.0') >= 0) {
						stage.css({ left: -(active.index() * width) });
					} else if (navigator.appVersion.indexOf('MSIE 9.0') >= 0) {
						stage.css({ left: -(active.index() * width) });
					} else {
						stage.css({
							'-moz-transition': '-moz-transform 0s',
							'-webkit-transition': '-webkit-transform 0s',
							transition: 'transform 0s',
							'-moz-transform':
								'translate3d(' + -(active.index() * width) + 'px,0,0)',
							'-webkit-transform':
								'translate3d(' + -(active.index() * width) + 'px,0,0)',
							transform: 'translate3d(' + -(active.index() * width) + 'px,0,0)',
						});
					}
				});

				stage.each(function () {
					let target = $(this);
					let startX = 0;
					let startY = 0;
					let moveX = 0;
					let moveY = 0;
					let position = 0;
					let stop = '';
					if (total < 2) {
					} else {
						target.on('touchstart', function (a) {
							stop = '';
							target
								.closest('.gaessamzieFlickItem')
								.parent('.gaessamzieFlickStage')
								.addClass('lock');
							startX = a.pageX || a.originalEvent.touches[0].pageX;
							startY = a.clientY || a.originalEvent.touches[0].clientY;
							position = target
								.find('>.gaessamzieFlickItem.active')
								.position().left;
							target.addClass('ing');
							target.css({
								'-moz-transition': '-moz-transform 0s',
								'-webkit-transition': '-webkit-transform 0s',
								transition: 'transform 0s',
								'-moz-transform': 'translate3d(' + -position + 'px,0,0)',
								'-webkit-transform': 'translate3d(' + -position + 'px,0,0)',
								transform: 'translate3d(' + -position + 'px,0,0)',
							});
							if (play == true) {
								playclear();
								delayclear();
							}
						});
						target.on('touchmove', function (a) {
							if (
								!flick.hasClass('freeze') &&
								!target.hasClass('lock') &&
								!$(a.target).hasClass('horizonwrap') &&
								$(a.target).parents('.horizonwrap').length == 0
							) {
								target.css({
									'-moz-transition': '-moz-transform 0s',
									'-webkit-transition': '-webkit-transform 0s',
									transition: 'transform 0s',
								});
								moveX = (a.pageX || a.originalEvent.touches[0].pageX) - startX;
								moveY =
									(a.clientY || a.originalEvent.touches[0].clientY) - startY;
								if (Math.abs(moveX) < Math.abs(moveY)) {
									stop = true;
									moveX = 0;
								}
								if (stop != true) {
									if (Math.abs(moveX) > Math.abs(moveY)) {
										stop = false;
										target.css({
											'-moz-transform':
												'translate3d(' + (-position + moveX) + 'px,0,0)',
											'-webkit-transform':
												'translate3d(' + (-position + moveX) + 'px,0,0)',
											transform:
												'translate3d(' + (-position + moveX) + 'px,0,0)',
										});
										document.addEventListener(
											'touchmove',
											onlyapptouchhandler,
											{ passive: false },
										);
										/*
										document.ontouchmove=function(event){
											event.preventDefault();
										};
										*/
										a.preventDefault();
									}
								}
								if (stop == true) {
									target.css({
										'-moz-transform': 'translate3d(' + -position + 'px,0,0)',
										'-webkit-transform': 'translate3d(' + -position + 'px,0,0)',
										transform: 'translate3d(' + -position + 'px,0,0)',
									});
								}
								if (stop == false) {
									document.addEventListener('touchmove', onlyapptouchhandler, {
										passive: false,
									});
									/*
									document.ontouchmove=function(event){
										event.preventDefault();
									};
									*/
									a.preventDefault();
								}
							}

							//lazyload 수동
							if (
								target.find('.gaessamzieFlickItem.active .lazyTab').length > 0
							) {
								target.find('.gaessamzieFlickItem.active .lazyTab').lazy();
							}
						});
						target.on('touchend', function (a) {
							document.removeEventListener('touchmove', onlyapptouchhandler, {
								passive: true,
							});
							/*
							document.ontouchmove=function(event){
								event.preventDefault=false;
							};
							*/
							$('.gaessamzieFlickStage').removeClass('lock');
							let now = target.find('>.gaessamzieFlickItem.active');
							target.removeClass('ing');
							target.css({
								'-moz-transition': '-moz-transform ' + speed / 10 + 's',
								'-webkit-transition': '-webkit-transform ' + speed / 10 + 's',
								transition: 'transform ' + speed / 10 + 's',
							});
							if (play == true) {
								delayidx = setTimeout(function () {
									playnext();
									playidx = setInterval(playnext, time * 1000);
								}, delay * 1000);
							}
							if (
								stop != true ||
								position != Math.abs(target.position().left)
							) {
								if (moveX < -(width / 8)) {
									if (
										target.find('>.gaessamzieFlickItem.active').index() ==
										total - 1
									) {
										if (loop == true) {
											target
												.css({
													'-moz-transform':
														'translate3d(' + (-position + -width) + 'px,0,0)',
													'-webkit-transform':
														'translate3d(' + (-position + -width) + 'px,0,0)',
													transform:
														'translate3d(' + (-position + -width) + 'px,0,0)',
												})
												.one('transitionend', function () {
													stage.css({
														'-moz-transition': '-moz-transform 0s',
														'-webkit-transition': '-webkit-transform 0s',
														transition: 'transform 0s',
														'-moz-transform':
															'translate3d(' +
															-(
																stage
																	.find('>.gaessamzieFlickItem.active')
																	.index() * width
															) +
															'px,0,0)',
														'-webkit-transform':
															'translate3d(' +
															-(
																stage
																	.find('>.gaessamzieFlickItem.active')
																	.index() * width
															) +
															'px,0,0)',
														transform:
															'translate3d(' +
															-(
																stage
																	.find('>.gaessamzieFlickItem.active')
																	.index() * width
															) +
															'px,0,0)',
													});
													target
														.find('>.gaessamzieFlickItem')
														.css({ position: 'absolute' });
													target
														.find('>.gaessamzieFlickItem')
														.eq(0)
														.css({ position: 'relative' });
													if (complete != false) {
														complete(flick);
													}
												});
											target
												.find('>.gaessamzieFlickItem.active')
												.removeClass('active');
											target
												.find('>.gaessamzieFlickItem')
												.eq(0)
												.addClass('active');
											moveX = 0;
											directionSet(-position + -width);
											buttonSet();
											indicatorSet();
											numberSet();
											if (after != false) {
												after(flick);
											}
										} else {
											target.css({
												'-moz-transform':
													'translate3d(' + -position + 'px,0,0)',
												'-webkit-transform':
													'translate3d(' + -position + 'px,0,0)',
												transform: 'translate3d(' + -position + 'px,0,0)',
											});
										}
									} else {
										target
											.css({
												'-moz-transform':
													'translate3d(' + (-position + -width) + 'px,0,0)',
												'-webkit-transform':
													'translate3d(' + (-position + -width) + 'px,0,0)',
												transform:
													'translate3d(' + (-position + -width) + 'px,0,0)',
											})
											.one('transitionend', function () {
												target
													.find('>.gaessamzieFlickItem')
													.css({ position: 'absolute' });
												now.next().css({ position: 'relative' });
												if (complete != false) {
													complete(flick);
												}
											});
										target
											.find('>.gaessamzieFlickItem.active')
											.removeClass('active')
											.next()
											.addClass('active');
										moveX = 0;
										directionSet(-position + -width);
										buttonSet();
										indicatorSet();
										numberSet();
										if (after != false) {
											after(flick);
										}
									}
								} else if (moveX > width / 8) {
									if (
										target.find('>.gaessamzieFlickItem.active').index() == 0
									) {
										if (loop == true) {
											target
												.css({
													'-moz-transform':
														'translate3d(' + (-position + width) + 'px,0,0)',
													'-webkit-transform':
														'translate3d(' + (-position + width) + 'px,0,0)',
													transform:
														'translate3d(' + (-position + width) + 'px,0,0)',
												})
												.one('transitionend', function () {
													stage.css({
														'-moz-transition': '-moz-transform 0s',
														'-webkit-transition': '-webkit-transform 0s',
														transition: 'transform 0s',
														'-moz-transform':
															'translate3d(' +
															-(
																stage
																	.find('>.gaessamzieFlickItem.active')
																	.index() * width
															) +
															'px,0,0)',
														'-webkit-transform':
															'translate3d(' +
															-(
																stage
																	.find('>.gaessamzieFlickItem.active')
																	.index() * width
															) +
															'px,0,0)',
														transform:
															'translate3d(' +
															-(
																stage
																	.find('>.gaessamzieFlickItem.active')
																	.index() * width
															) +
															'px,0,0)',
													});
													target
														.find('>.gaessamzieFlickItem')
														.css({ position: 'absolute' });
													target
														.find('>.gaessamzieFlickItem')
														.eq(total - 1)
														.css({ position: 'relative' });
													if (complete != false) {
														complete(flick);
													}
												});
											target
												.find('>.gaessamzieFlickItem.active')
												.removeClass('active');
											target
												.find('>.gaessamzieFlickItem')
												.eq(total - 1)
												.addClass('active');
											moveX = 0;
											directionSet(-position + width);
											buttonSet();
											indicatorSet();
											numberSet();
											if (after != false) {
												after(flick);
											}
										} else {
											target.css({
												'-moz-transform':
													'translate3d(' + -position + 'px,0,0)',
												'-webkit-transform':
													'translate3d(' + -position + 'px,0,0)',
												transform: 'translate3d(' + -position + 'px,0,0)',
											});
										}
									} else {
										target
											.css({
												'-moz-transform':
													'translate3d(' + (-position + width) + 'px,0,0)',
												'-webkit-transform':
													'translate3d(' + (-position + width) + 'px,0,0)',
												transform:
													'translate3d(' + (-position + width) + 'px,0,0)',
											})
											.one('transitionend', function () {
												target
													.find('>.gaessamzieFlickItem')
													.css({ position: 'absolute' });
												now.prev().css({ position: 'relative' });
												if (complete != false) {
													complete(flick);
												}
											});
										target
											.find('>.gaessamzieFlickItem.active')
											.removeClass('active')
											.prev()
											.addClass('active');
										moveX = 0;
										directionSet(-position + width);
										buttonSet();
										indicatorSet();
										numberSet();
										if (after != false) {
											after(flick);
										}
									}
								} else {
									target.css({
										'-moz-transform': 'translate3d(' + -position + 'px,0,0)',
										'-webkit-transform': 'translate3d(' + -position + 'px,0,0)',
										transform: 'translate3d(' + -position + 'px,0,0)',
									});
								}
							}

							//lazyload 수동
							if (
								target.find('.gaessamzieFlickItem.active .lazyTab').length > 0
							) {
								target.find('.gaessamzieFlickItem.active .lazyTab').lazy();
							}
							//console.log(target.find('.gaessamzieFlickItem.active .lazyTab').length);
						});
					}
				});
			});
		},
	});
})(jQuery);
